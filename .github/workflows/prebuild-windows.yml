name: Build Windows x64 prebuilds

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build-windows-x64:
    name: Build Windows x64 (Node ${{ matrix.node }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node: ['18.x', '20.x', '22.x']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build native addon
        # relies on package.json "build" script (node-gyp rebuild)
        run: npm run build

      - name: Run error-handling tests
        run: node test/error_handling.test.js

      - name: Create prebuild artifact (x64)
        env:
          npm_config_disturl: https://nodejs.org/dist
        run: |
          if (!(Test-Path prebuilds)) { New-Item -ItemType Directory -Path prebuilds | Out-Null }
          # Get the concrete Node runtime version (e.g. v20.19.5) and pass it
          # to prebuild --target so node-abi can resolve the proper target.
          $nodever = (node -v).Trim()
          Write-Host "Detected node runtime: $nodever"
          npx --no-install prebuild --strip --target $nodever --arch=x64 --platform=win32 --runtime=node --out prebuilds

      - name: Upload prebuild artifact
        uses: actions/upload-artifact@v4
        with:
          name: prebuild-win-x64-node-${{ matrix.node }}
          path: prebuilds/*

      - name: Publish prebuild to GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: prebuilds/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}